// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/bikes": {
            "get": {
                "description": "Fetches all bikes from the database.",
                "tags": [
                    "Bikes"
                ],
                "summary": "Fetches all bikes from the database.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Bike"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.Unauthorized"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ServerError"
                        }
                    }
                }
            }
        },
        "/bikes/:id": {
            "get": {
                "description": "Fetches a bike with a user-provided ID.",
                "consumes": [
                    "text/plain"
                ],
                "tags": [
                    "Bikes"
                ],
                "summary": "Fetches a bike with a user-provided ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "bike_id in models.Bike",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.Unauthorized"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.NotFound"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ServerError"
                        }
                    }
                }
            }
        },
        "/fetchUserData": {
            "get": {
                "description": "Fetches the data of the logged in user.",
                "tags": [
                    "Users"
                ],
                "summary": "Fetches the data of the logged in user.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.Unauthorized"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ServerError"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Handles the login procedure to the service.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Authorization"
                ],
                "summary": "Handles the login procedure to the service.",
                "parameters": [
                    {
                        "description": "bike_id in models.LoginRequest",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/logout": {
            "get": {
                "description": "Allows the user to log out from the service.",
                "tags": [
                    "Authorization"
                ],
                "summary": "Allows the user to log out from the service.",
                "responses": {
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/rent/:id": {
            "patch": {
                "description": "User rents the bike.",
                "consumes": [
                    "text/plain"
                ],
                "tags": [
                    "Bikes"
                ],
                "summary": "User rents the bike.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "bike_id in models.Bike",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.BadRequest"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.Unauthorized"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.NotFound"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ServerError"
                        }
                    }
                }
            }
        },
        "/return/:id": {
            "patch": {
                "description": "User returns the bike.",
                "consumes": [
                    "text/plain"
                ],
                "tags": [
                    "Bikes"
                ],
                "summary": "User returns the bike.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "bike_id in models.Bike",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.BadRequest"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/models.Unauthorized"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.NotFound"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ServerError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.BadRequest": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "400 Bad Request"
                }
            }
        },
        "models.Bike": {
            "type": "object",
            "properties": {
                "bike_id": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longtitude": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "rented": {
                    "type": "boolean"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.LoginRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.NotFound": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "404 Not Found"
                }
            }
        },
        "models.ServerError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "500 Server Error"
                }
            }
        },
        "models.Unauthorized": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "401 Unauthorized"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "bike_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "renting": {
                    "type": "boolean"
                },
                "user_id": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "localhost:3000",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Bike renting service API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
